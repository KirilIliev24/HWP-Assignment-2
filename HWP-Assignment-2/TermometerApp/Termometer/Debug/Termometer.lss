
Termometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000006aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000636  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800200  00800200  000006aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  0000071c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000112d  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dfb  00000000  00000000  00001909  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006a6  00000000  00000000  00002704  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002dac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000688  00000000  00000000  00002f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038c  00000000  00000000  000035b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003944  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5e c1       	rjmp	.+700    	; 0x306 <__vector_18>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	bd c0       	rjmp	.+378    	; 0x1f0 <__vector_29>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a9 30       	cpi	r26, 0x09	; 9
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	0a d1       	rcall	.+532    	; 0x31a <main>
 106:	95 c2       	rjmp	.+1322   	; 0x632 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <led_create>:
	led_set(3, ledFive);
	
	//XNOR
	bool ledSix = !ledThree;
	led_set(2, ledSix);
}
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	81 b9       	out	0x01, r24	; 1
 10e:	82 b9       	out	0x02, r24	; 2
 110:	08 95       	ret

00000112 <led_set>:
 112:	88 30       	cpi	r24, 0x08	; 8
 114:	e0 f4       	brcc	.+56     	; 0x14e <led_set+0x3c>
 116:	61 30       	cpi	r22, 0x01	; 1
 118:	71 f4       	brne	.+28     	; 0x136 <led_set+0x24>
 11a:	42 b1       	in	r20, 0x02	; 2
 11c:	21 e0       	ldi	r18, 0x01	; 1
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	b9 01       	movw	r22, r18
 122:	02 c0       	rjmp	.+4      	; 0x128 <led_set+0x16>
 124:	66 0f       	add	r22, r22
 126:	77 1f       	adc	r23, r23
 128:	8a 95       	dec	r24
 12a:	e2 f7       	brpl	.-8      	; 0x124 <led_set+0x12>
 12c:	cb 01       	movw	r24, r22
 12e:	80 95       	com	r24
 130:	84 23       	and	r24, r20
 132:	82 b9       	out	0x02, r24	; 2
 134:	08 95       	ret
 136:	42 b1       	in	r20, 0x02	; 2
 138:	21 e0       	ldi	r18, 0x01	; 1
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	b9 01       	movw	r22, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <led_set+0x32>
 140:	66 0f       	add	r22, r22
 142:	77 1f       	adc	r23, r23
 144:	8a 95       	dec	r24
 146:	e2 f7       	brpl	.-8      	; 0x140 <led_set+0x2e>
 148:	cb 01       	movw	r24, r22
 14a:	84 2b       	or	r24, r20
 14c:	82 b9       	out	0x02, r24	; 2
 14e:	08 95       	ret

00000150 <lightbar>:

void lightbar(uint8_t level)
{
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
	if(level < 1)
 154:	88 23       	and	r24, r24
 156:	49 f0       	breq	.+18     	; 0x16a <lightbar+0x1a>
 158:	d8 2f       	mov	r29, r24
 15a:	c0 e0       	ldi	r28, 0x00	; 0
 15c:	04 c0       	rjmp	.+8      	; 0x166 <lightbar+0x16>
		return;
	}
	
	for (uint8_t i = 0; i < level; i++)
	{
		led_set(i, 1);
 15e:	61 e0       	ldi	r22, 0x01	; 1
 160:	8c 2f       	mov	r24, r28
 162:	d7 df       	rcall	.-82     	; 0x112 <led_set>
	if(level < 1)
	{
		return;
	}
	
	for (uint8_t i = 0; i < level; i++)
 164:	cf 5f       	subi	r28, 0xFF	; 255
 166:	cd 17       	cp	r28, r29
 168:	d0 f3       	brcs	.-12     	; 0x15e <lightbar+0xe>
	{
		led_set(i, 1);
	}
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	08 95       	ret

00000170 <startConversion>:
volatile int8_t temperature = 0;

void startConversion()
{
	//start conversion
	ADCSRA |= _BV(ADSC);
 170:	ea e7       	ldi	r30, 0x7A	; 122
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	80 64       	ori	r24, 0x40	; 64
 178:	80 83       	st	Z, r24
 17a:	08 95       	ret

0000017c <setupADC>:
}

void setupADC()
{
	//MUX 0, 1, 2, 5 are set because we use ADC15 which is 100111
	ADMUX |= _BV(REFS0) | _BV(MUX0) | _BV(MUX1) | _BV(MUX2);
 17c:	ec e7       	ldi	r30, 0x7C	; 124
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	87 64       	ori	r24, 0x47	; 71
 184:	80 83       	st	Z, r24
	ADCSRB |= _BV(MUX5); 
 186:	eb e7       	ldi	r30, 0x7B	; 123
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	88 60       	ori	r24, 0x08	; 8
 18e:	80 83       	st	Z, r24
	
	//ADEN is enabling the ADC conversion
	//ADATE enable auto trigger
	//ADIE ISR is called when the conversion is done                        
	//ADPS0 ADPS1 ADPS2 are for the division factor 128
	ADCSRA |= _BV(ADEN) | _BV(ADIE) | _BV(ADATE) | _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
 190:	aa e7       	ldi	r26, 0x7A	; 122
 192:	b0 e0       	ldi	r27, 0x00	; 0
 194:	8c 91       	ld	r24, X
 196:	8f 6a       	ori	r24, 0xAF	; 175
 198:	8c 93       	st	X, r24
	
	//auto trigger connected to timer 1
	ADCSRB |= _BV(ADTS0) | _BV(ADTS2); 
 19a:	80 81       	ld	r24, Z
 19c:	85 60       	ori	r24, 0x05	; 5
 19e:	80 83       	st	Z, r24
	startConversion();
 1a0:	e7 cf       	rjmp	.-50     	; 0x170 <startConversion>
 1a2:	08 95       	ret

000001a4 <termometer_create>:
}

void termometer_create()
{
	//set port G bit 0 to output
	DDRG |= _BV(PG0);
 1a4:	83 b3       	in	r24, 0x13	; 19
 1a6:	81 60       	ori	r24, 0x01	; 1
 1a8:	83 bb       	out	0x13, r24	; 19
	
	//enable tmp sensor
	PORTG |= _BV(PG0);
 1aa:	84 b3       	in	r24, 0x14	; 20
 1ac:	81 60       	ori	r24, 0x01	; 1
 1ae:	84 bb       	out	0x14, r24	; 20
		
	//sei();
	setupADC();
 1b0:	e5 df       	rcall	.-54     	; 0x17c <setupADC>
	
	//set port k bit 7 to input
	DDRK &= ~_BV(PK7);
 1b2:	e7 e0       	ldi	r30, 0x07	; 7
 1b4:	f1 e0       	ldi	r31, 0x01	; 1
 1b6:	80 81       	ld	r24, Z
 1b8:	8f 77       	andi	r24, 0x7F	; 127
 1ba:	80 83       	st	Z, r24
 1bc:	08 95       	ret

000001be <Show_leds>:
}

void Show_leds(int8_t temp)
{
		if(temp < 18)
 1be:	82 31       	cpi	r24, 0x12	; 18
 1c0:	1c f4       	brge	.+6      	; 0x1c8 <Show_leds+0xa>
		{
			lightbar(0);
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	c5 cf       	rjmp	.-118    	; 0x150 <lightbar>
 1c6:	08 95       	ret
		}
		else if (temp > 25)
 1c8:	8a 31       	cpi	r24, 0x1A	; 26
 1ca:	1c f0       	brlt	.+6      	; 0x1d2 <Show_leds+0x14>
		{
			lightbar(8);
 1cc:	88 e0       	ldi	r24, 0x08	; 8
 1ce:	c0 cf       	rjmp	.-128    	; 0x150 <lightbar>
 1d0:	08 95       	ret
		}
		else
		{
			int8_t level = temp % 17;
 1d2:	99 e7       	ldi	r25, 0x79	; 121
 1d4:	89 02       	muls	r24, r25
 1d6:	91 2d       	mov	r25, r1
 1d8:	11 24       	eor	r1, r1
 1da:	95 95       	asr	r25
 1dc:	95 95       	asr	r25
 1de:	95 95       	asr	r25
 1e0:	87 fd       	sbrc	r24, 7
 1e2:	93 95       	inc	r25
			lightbar(level);
 1e4:	21 e1       	ldi	r18, 0x11	; 17
 1e6:	92 9f       	mul	r25, r18
 1e8:	80 19       	sub	r24, r0
 1ea:	11 24       	eor	r1, r1
 1ec:	b1 cf       	rjmp	.-158    	; 0x150 <lightbar>
 1ee:	08 95       	ret

000001f0 <__vector_29>:
		}
}

ISR(ADC_vect)
{
 1f0:	1f 92       	push	r1
 1f2:	0f 92       	push	r0
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	0f 92       	push	r0
 1f8:	11 24       	eor	r1, r1
 1fa:	0b b6       	in	r0, 0x3b	; 59
 1fc:	0f 92       	push	r0
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
	adcLevel = ADC;
 216:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 21a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	16 d1       	rcall	.+556    	; 0x450 <__floatunsisf>
 224:	60 93 05 02 	sts	0x0205, r22	; 0x800205 <adcLevel>
 228:	70 93 06 02 	sts	0x0206, r23	; 0x800206 <adcLevel+0x1>
 22c:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <adcLevel+0x2>
 230:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <adcLevel+0x3>
	//calculate temperature
	voltage = (adcLevel * 5.0) / 1024.0;
 234:	60 91 05 02 	lds	r22, 0x0205	; 0x800205 <adcLevel>
 238:	70 91 06 02 	lds	r23, 0x0206	; 0x800206 <adcLevel+0x1>
 23c:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <adcLevel+0x2>
 240:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <adcLevel+0x3>
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	40 ea       	ldi	r20, 0xA0	; 160
 24a:	50 e4       	ldi	r21, 0x40	; 64
 24c:	8f d1       	rcall	.+798    	; 0x56c <__mulsf3>
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	40 e8       	ldi	r20, 0x80	; 128
 254:	5a e3       	ldi	r21, 0x3A	; 58
 256:	8a d1       	rcall	.+788    	; 0x56c <__mulsf3>
 258:	60 93 01 02 	sts	0x0201, r22	; 0x800201 <voltage>
 25c:	70 93 02 02 	sts	0x0202, r23	; 0x800202 <voltage+0x1>
 260:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <voltage+0x2>
 264:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <voltage+0x3>
	temperature = (voltage - 0.5) * 100;
 268:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <voltage>
 26c:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <voltage+0x1>
 270:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <voltage+0x2>
 274:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <voltage+0x3>
 278:	20 e0       	ldi	r18, 0x00	; 0
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	5f e3       	ldi	r21, 0x3F	; 63
 280:	51 d0       	rcall	.+162    	; 0x324 <__subsf3>
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	48 ec       	ldi	r20, 0xC8	; 200
 288:	52 e4       	ldi	r21, 0x42	; 66
 28a:	70 d1       	rcall	.+736    	; 0x56c <__mulsf3>
 28c:	b0 d0       	rcall	.+352    	; 0x3ee <__fixsfsi>
 28e:	60 93 00 02 	sts	0x0200, r22	; 0x800200 <__DATA_REGION_ORIGIN__>
	Show_leds(temperature);
 292:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 296:	93 df       	rcall	.-218    	; 0x1be <Show_leds>
	TIFR1 |= _BV(OCR1B); 
 298:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
 29c:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <__vector_29+0xba>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	2a 95       	dec	r18
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <__vector_29+0xb6>
 2ae:	96 b3       	in	r25, 0x16	; 22
 2b0:	89 2b       	or	r24, r25
 2b2:	86 bb       	out	0x16, r24	; 22
 2b4:	ff 91       	pop	r31
 2b6:	ef 91       	pop	r30
 2b8:	bf 91       	pop	r27
 2ba:	af 91       	pop	r26
 2bc:	9f 91       	pop	r25
 2be:	8f 91       	pop	r24
 2c0:	7f 91       	pop	r23
 2c2:	6f 91       	pop	r22
 2c4:	5f 91       	pop	r21
 2c6:	4f 91       	pop	r20
 2c8:	3f 91       	pop	r19
 2ca:	2f 91       	pop	r18
 2cc:	0f 90       	pop	r0
 2ce:	0b be       	out	0x3b, r0	; 59
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <timer_init>:


//timer for 1 sec
void timer_init()
{	
	TCCR1A |= _BV(WGM12);
 2da:	e0 e8       	ldi	r30, 0x80	; 128
 2dc:	f0 e0       	ldi	r31, 0x00	; 0
 2de:	80 81       	ld	r24, Z
 2e0:	88 60       	ori	r24, 0x08	; 8
 2e2:	80 83       	st	Z, r24
	
	//prescaler 256
	TCCR1B |= _BV(CS12);
 2e4:	e1 e8       	ldi	r30, 0x81	; 129
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	80 81       	ld	r24, Z
 2ea:	84 60       	ori	r24, 0x04	; 4
 2ec:	80 83       	st	Z, r24
	
	OCR1A = 62500;
 2ee:	84 e2       	ldi	r24, 0x24	; 36
 2f0:	94 ef       	ldi	r25, 0xF4	; 244
 2f2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 2f6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	
	//when timer output compare matches B interrupt called 
	TIMSK1 |= _BV(OCIE1B);
 2fa:	ef e6       	ldi	r30, 0x6F	; 111
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	80 81       	ld	r24, Z
 300:	84 60       	ori	r24, 0x04	; 4
 302:	80 83       	st	Z, r24
 304:	08 95       	ret

00000306 <__vector_18>:
	//set global interrupt flag 
	//sei();
}

ISR(TIMER1_COMPB_vect)
{
 306:	1f 92       	push	r1
 308:	0f 92       	push	r0
 30a:	0f b6       	in	r0, 0x3f	; 63
 30c:	0f 92       	push	r0
 30e:	11 24       	eor	r1, r1
	
 310:	0f 90       	pop	r0
 312:	0f be       	out	0x3f, r0	; 63
 314:	0f 90       	pop	r0
 316:	1f 90       	pop	r1
 318:	18 95       	reti

0000031a <main>:
#include "Drivers/Termometer/Termometer.h"
#include "Drivers/Timer/Timer.h"

int main(void)
{
	sei();
 31a:	78 94       	sei
	timer_init();
 31c:	de df       	rcall	.-68     	; 0x2da <timer_init>
	led_create();
 31e:	f5 de       	rcall	.-534    	; 0x10a <led_create>
	termometer_create();
 320:	41 df       	rcall	.-382    	; 0x1a4 <termometer_create>
 322:	ff cf       	rjmp	.-2      	; 0x322 <main+0x8>

00000324 <__subsf3>:
 324:	50 58       	subi	r21, 0x80	; 128

00000326 <__addsf3>:
 326:	bb 27       	eor	r27, r27
 328:	aa 27       	eor	r26, r26
 32a:	0e d0       	rcall	.+28     	; 0x348 <__addsf3x>
 32c:	e5 c0       	rjmp	.+458    	; 0x4f8 <__fp_round>
 32e:	d6 d0       	rcall	.+428    	; 0x4dc <__fp_pscA>
 330:	30 f0       	brcs	.+12     	; 0x33e <__addsf3+0x18>
 332:	db d0       	rcall	.+438    	; 0x4ea <__fp_pscB>
 334:	20 f0       	brcs	.+8      	; 0x33e <__addsf3+0x18>
 336:	31 f4       	brne	.+12     	; 0x344 <__addsf3+0x1e>
 338:	9f 3f       	cpi	r25, 0xFF	; 255
 33a:	11 f4       	brne	.+4      	; 0x340 <__addsf3+0x1a>
 33c:	1e f4       	brtc	.+6      	; 0x344 <__addsf3+0x1e>
 33e:	cb c0       	rjmp	.+406    	; 0x4d6 <__fp_nan>
 340:	0e f4       	brtc	.+2      	; 0x344 <__addsf3+0x1e>
 342:	e0 95       	com	r30
 344:	e7 fb       	bst	r30, 7
 346:	c1 c0       	rjmp	.+386    	; 0x4ca <__fp_inf>

00000348 <__addsf3x>:
 348:	e9 2f       	mov	r30, r25
 34a:	e7 d0       	rcall	.+462    	; 0x51a <__fp_split3>
 34c:	80 f3       	brcs	.-32     	; 0x32e <__addsf3+0x8>
 34e:	ba 17       	cp	r27, r26
 350:	62 07       	cpc	r22, r18
 352:	73 07       	cpc	r23, r19
 354:	84 07       	cpc	r24, r20
 356:	95 07       	cpc	r25, r21
 358:	18 f0       	brcs	.+6      	; 0x360 <__addsf3x+0x18>
 35a:	71 f4       	brne	.+28     	; 0x378 <__addsf3x+0x30>
 35c:	9e f5       	brtc	.+102    	; 0x3c4 <__addsf3x+0x7c>
 35e:	ff c0       	rjmp	.+510    	; 0x55e <__fp_zero>
 360:	0e f4       	brtc	.+2      	; 0x364 <__addsf3x+0x1c>
 362:	e0 95       	com	r30
 364:	0b 2e       	mov	r0, r27
 366:	ba 2f       	mov	r27, r26
 368:	a0 2d       	mov	r26, r0
 36a:	0b 01       	movw	r0, r22
 36c:	b9 01       	movw	r22, r18
 36e:	90 01       	movw	r18, r0
 370:	0c 01       	movw	r0, r24
 372:	ca 01       	movw	r24, r20
 374:	a0 01       	movw	r20, r0
 376:	11 24       	eor	r1, r1
 378:	ff 27       	eor	r31, r31
 37a:	59 1b       	sub	r21, r25
 37c:	99 f0       	breq	.+38     	; 0x3a4 <__addsf3x+0x5c>
 37e:	59 3f       	cpi	r21, 0xF9	; 249
 380:	50 f4       	brcc	.+20     	; 0x396 <__addsf3x+0x4e>
 382:	50 3e       	cpi	r21, 0xE0	; 224
 384:	68 f1       	brcs	.+90     	; 0x3e0 <__addsf3x+0x98>
 386:	1a 16       	cp	r1, r26
 388:	f0 40       	sbci	r31, 0x00	; 0
 38a:	a2 2f       	mov	r26, r18
 38c:	23 2f       	mov	r18, r19
 38e:	34 2f       	mov	r19, r20
 390:	44 27       	eor	r20, r20
 392:	58 5f       	subi	r21, 0xF8	; 248
 394:	f3 cf       	rjmp	.-26     	; 0x37c <__addsf3x+0x34>
 396:	46 95       	lsr	r20
 398:	37 95       	ror	r19
 39a:	27 95       	ror	r18
 39c:	a7 95       	ror	r26
 39e:	f0 40       	sbci	r31, 0x00	; 0
 3a0:	53 95       	inc	r21
 3a2:	c9 f7       	brne	.-14     	; 0x396 <__addsf3x+0x4e>
 3a4:	7e f4       	brtc	.+30     	; 0x3c4 <__addsf3x+0x7c>
 3a6:	1f 16       	cp	r1, r31
 3a8:	ba 0b       	sbc	r27, r26
 3aa:	62 0b       	sbc	r22, r18
 3ac:	73 0b       	sbc	r23, r19
 3ae:	84 0b       	sbc	r24, r20
 3b0:	ba f0       	brmi	.+46     	; 0x3e0 <__addsf3x+0x98>
 3b2:	91 50       	subi	r25, 0x01	; 1
 3b4:	a1 f0       	breq	.+40     	; 0x3de <__addsf3x+0x96>
 3b6:	ff 0f       	add	r31, r31
 3b8:	bb 1f       	adc	r27, r27
 3ba:	66 1f       	adc	r22, r22
 3bc:	77 1f       	adc	r23, r23
 3be:	88 1f       	adc	r24, r24
 3c0:	c2 f7       	brpl	.-16     	; 0x3b2 <__addsf3x+0x6a>
 3c2:	0e c0       	rjmp	.+28     	; 0x3e0 <__addsf3x+0x98>
 3c4:	ba 0f       	add	r27, r26
 3c6:	62 1f       	adc	r22, r18
 3c8:	73 1f       	adc	r23, r19
 3ca:	84 1f       	adc	r24, r20
 3cc:	48 f4       	brcc	.+18     	; 0x3e0 <__addsf3x+0x98>
 3ce:	87 95       	ror	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b7 95       	ror	r27
 3d6:	f7 95       	ror	r31
 3d8:	9e 3f       	cpi	r25, 0xFE	; 254
 3da:	08 f0       	brcs	.+2      	; 0x3de <__addsf3x+0x96>
 3dc:	b3 cf       	rjmp	.-154    	; 0x344 <__addsf3+0x1e>
 3de:	93 95       	inc	r25
 3e0:	88 0f       	add	r24, r24
 3e2:	08 f0       	brcs	.+2      	; 0x3e6 <__addsf3x+0x9e>
 3e4:	99 27       	eor	r25, r25
 3e6:	ee 0f       	add	r30, r30
 3e8:	97 95       	ror	r25
 3ea:	87 95       	ror	r24
 3ec:	08 95       	ret

000003ee <__fixsfsi>:
 3ee:	04 d0       	rcall	.+8      	; 0x3f8 <__fixunssfsi>
 3f0:	68 94       	set
 3f2:	b1 11       	cpse	r27, r1
 3f4:	b5 c0       	rjmp	.+362    	; 0x560 <__fp_szero>
 3f6:	08 95       	ret

000003f8 <__fixunssfsi>:
 3f8:	98 d0       	rcall	.+304    	; 0x52a <__fp_splitA>
 3fa:	88 f0       	brcs	.+34     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3fc:	9f 57       	subi	r25, 0x7F	; 127
 3fe:	90 f0       	brcs	.+36     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 400:	b9 2f       	mov	r27, r25
 402:	99 27       	eor	r25, r25
 404:	b7 51       	subi	r27, 0x17	; 23
 406:	a0 f0       	brcs	.+40     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 408:	d1 f0       	breq	.+52     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	1a f0       	brmi	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 414:	ba 95       	dec	r27
 416:	c9 f7       	brne	.-14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 418:	12 c0       	rjmp	.+36     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 41a:	b1 30       	cpi	r27, 0x01	; 1
 41c:	81 f0       	breq	.+32     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 41e:	9f d0       	rcall	.+318    	; 0x55e <__fp_zero>
 420:	b1 e0       	ldi	r27, 0x01	; 1
 422:	08 95       	ret
 424:	9c c0       	rjmp	.+312    	; 0x55e <__fp_zero>
 426:	67 2f       	mov	r22, r23
 428:	78 2f       	mov	r23, r24
 42a:	88 27       	eor	r24, r24
 42c:	b8 5f       	subi	r27, 0xF8	; 248
 42e:	39 f0       	breq	.+14     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 430:	b9 3f       	cpi	r27, 0xF9	; 249
 432:	cc f3       	brlt	.-14     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 434:	86 95       	lsr	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b3 95       	inc	r27
 43c:	d9 f7       	brne	.-10     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 43e:	3e f4       	brtc	.+14     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 440:	90 95       	com	r25
 442:	80 95       	com	r24
 444:	70 95       	com	r23
 446:	61 95       	neg	r22
 448:	7f 4f       	sbci	r23, 0xFF	; 255
 44a:	8f 4f       	sbci	r24, 0xFF	; 255
 44c:	9f 4f       	sbci	r25, 0xFF	; 255
 44e:	08 95       	ret

00000450 <__floatunsisf>:
 450:	e8 94       	clt
 452:	09 c0       	rjmp	.+18     	; 0x466 <__floatsisf+0x12>

00000454 <__floatsisf>:
 454:	97 fb       	bst	r25, 7
 456:	3e f4       	brtc	.+14     	; 0x466 <__floatsisf+0x12>
 458:	90 95       	com	r25
 45a:	80 95       	com	r24
 45c:	70 95       	com	r23
 45e:	61 95       	neg	r22
 460:	7f 4f       	sbci	r23, 0xFF	; 255
 462:	8f 4f       	sbci	r24, 0xFF	; 255
 464:	9f 4f       	sbci	r25, 0xFF	; 255
 466:	99 23       	and	r25, r25
 468:	a9 f0       	breq	.+42     	; 0x494 <__floatsisf+0x40>
 46a:	f9 2f       	mov	r31, r25
 46c:	96 e9       	ldi	r25, 0x96	; 150
 46e:	bb 27       	eor	r27, r27
 470:	93 95       	inc	r25
 472:	f6 95       	lsr	r31
 474:	87 95       	ror	r24
 476:	77 95       	ror	r23
 478:	67 95       	ror	r22
 47a:	b7 95       	ror	r27
 47c:	f1 11       	cpse	r31, r1
 47e:	f8 cf       	rjmp	.-16     	; 0x470 <__floatsisf+0x1c>
 480:	fa f4       	brpl	.+62     	; 0x4c0 <__floatsisf+0x6c>
 482:	bb 0f       	add	r27, r27
 484:	11 f4       	brne	.+4      	; 0x48a <__floatsisf+0x36>
 486:	60 ff       	sbrs	r22, 0
 488:	1b c0       	rjmp	.+54     	; 0x4c0 <__floatsisf+0x6c>
 48a:	6f 5f       	subi	r22, 0xFF	; 255
 48c:	7f 4f       	sbci	r23, 0xFF	; 255
 48e:	8f 4f       	sbci	r24, 0xFF	; 255
 490:	9f 4f       	sbci	r25, 0xFF	; 255
 492:	16 c0       	rjmp	.+44     	; 0x4c0 <__floatsisf+0x6c>
 494:	88 23       	and	r24, r24
 496:	11 f0       	breq	.+4      	; 0x49c <__floatsisf+0x48>
 498:	96 e9       	ldi	r25, 0x96	; 150
 49a:	11 c0       	rjmp	.+34     	; 0x4be <__floatsisf+0x6a>
 49c:	77 23       	and	r23, r23
 49e:	21 f0       	breq	.+8      	; 0x4a8 <__floatsisf+0x54>
 4a0:	9e e8       	ldi	r25, 0x8E	; 142
 4a2:	87 2f       	mov	r24, r23
 4a4:	76 2f       	mov	r23, r22
 4a6:	05 c0       	rjmp	.+10     	; 0x4b2 <__floatsisf+0x5e>
 4a8:	66 23       	and	r22, r22
 4aa:	71 f0       	breq	.+28     	; 0x4c8 <__floatsisf+0x74>
 4ac:	96 e8       	ldi	r25, 0x86	; 134
 4ae:	86 2f       	mov	r24, r22
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	60 e0       	ldi	r22, 0x00	; 0
 4b4:	2a f0       	brmi	.+10     	; 0x4c0 <__floatsisf+0x6c>
 4b6:	9a 95       	dec	r25
 4b8:	66 0f       	add	r22, r22
 4ba:	77 1f       	adc	r23, r23
 4bc:	88 1f       	adc	r24, r24
 4be:	da f7       	brpl	.-10     	; 0x4b6 <__floatsisf+0x62>
 4c0:	88 0f       	add	r24, r24
 4c2:	96 95       	lsr	r25
 4c4:	87 95       	ror	r24
 4c6:	97 f9       	bld	r25, 7
 4c8:	08 95       	ret

000004ca <__fp_inf>:
 4ca:	97 f9       	bld	r25, 7
 4cc:	9f 67       	ori	r25, 0x7F	; 127
 4ce:	80 e8       	ldi	r24, 0x80	; 128
 4d0:	70 e0       	ldi	r23, 0x00	; 0
 4d2:	60 e0       	ldi	r22, 0x00	; 0
 4d4:	08 95       	ret

000004d6 <__fp_nan>:
 4d6:	9f ef       	ldi	r25, 0xFF	; 255
 4d8:	80 ec       	ldi	r24, 0xC0	; 192
 4da:	08 95       	ret

000004dc <__fp_pscA>:
 4dc:	00 24       	eor	r0, r0
 4de:	0a 94       	dec	r0
 4e0:	16 16       	cp	r1, r22
 4e2:	17 06       	cpc	r1, r23
 4e4:	18 06       	cpc	r1, r24
 4e6:	09 06       	cpc	r0, r25
 4e8:	08 95       	ret

000004ea <__fp_pscB>:
 4ea:	00 24       	eor	r0, r0
 4ec:	0a 94       	dec	r0
 4ee:	12 16       	cp	r1, r18
 4f0:	13 06       	cpc	r1, r19
 4f2:	14 06       	cpc	r1, r20
 4f4:	05 06       	cpc	r0, r21
 4f6:	08 95       	ret

000004f8 <__fp_round>:
 4f8:	09 2e       	mov	r0, r25
 4fa:	03 94       	inc	r0
 4fc:	00 0c       	add	r0, r0
 4fe:	11 f4       	brne	.+4      	; 0x504 <__fp_round+0xc>
 500:	88 23       	and	r24, r24
 502:	52 f0       	brmi	.+20     	; 0x518 <__fp_round+0x20>
 504:	bb 0f       	add	r27, r27
 506:	40 f4       	brcc	.+16     	; 0x518 <__fp_round+0x20>
 508:	bf 2b       	or	r27, r31
 50a:	11 f4       	brne	.+4      	; 0x510 <__fp_round+0x18>
 50c:	60 ff       	sbrs	r22, 0
 50e:	04 c0       	rjmp	.+8      	; 0x518 <__fp_round+0x20>
 510:	6f 5f       	subi	r22, 0xFF	; 255
 512:	7f 4f       	sbci	r23, 0xFF	; 255
 514:	8f 4f       	sbci	r24, 0xFF	; 255
 516:	9f 4f       	sbci	r25, 0xFF	; 255
 518:	08 95       	ret

0000051a <__fp_split3>:
 51a:	57 fd       	sbrc	r21, 7
 51c:	90 58       	subi	r25, 0x80	; 128
 51e:	44 0f       	add	r20, r20
 520:	55 1f       	adc	r21, r21
 522:	59 f0       	breq	.+22     	; 0x53a <__fp_splitA+0x10>
 524:	5f 3f       	cpi	r21, 0xFF	; 255
 526:	71 f0       	breq	.+28     	; 0x544 <__fp_splitA+0x1a>
 528:	47 95       	ror	r20

0000052a <__fp_splitA>:
 52a:	88 0f       	add	r24, r24
 52c:	97 fb       	bst	r25, 7
 52e:	99 1f       	adc	r25, r25
 530:	61 f0       	breq	.+24     	; 0x54a <__fp_splitA+0x20>
 532:	9f 3f       	cpi	r25, 0xFF	; 255
 534:	79 f0       	breq	.+30     	; 0x554 <__fp_splitA+0x2a>
 536:	87 95       	ror	r24
 538:	08 95       	ret
 53a:	12 16       	cp	r1, r18
 53c:	13 06       	cpc	r1, r19
 53e:	14 06       	cpc	r1, r20
 540:	55 1f       	adc	r21, r21
 542:	f2 cf       	rjmp	.-28     	; 0x528 <__fp_split3+0xe>
 544:	46 95       	lsr	r20
 546:	f1 df       	rcall	.-30     	; 0x52a <__fp_splitA>
 548:	08 c0       	rjmp	.+16     	; 0x55a <__fp_splitA+0x30>
 54a:	16 16       	cp	r1, r22
 54c:	17 06       	cpc	r1, r23
 54e:	18 06       	cpc	r1, r24
 550:	99 1f       	adc	r25, r25
 552:	f1 cf       	rjmp	.-30     	; 0x536 <__fp_splitA+0xc>
 554:	86 95       	lsr	r24
 556:	71 05       	cpc	r23, r1
 558:	61 05       	cpc	r22, r1
 55a:	08 94       	sec
 55c:	08 95       	ret

0000055e <__fp_zero>:
 55e:	e8 94       	clt

00000560 <__fp_szero>:
 560:	bb 27       	eor	r27, r27
 562:	66 27       	eor	r22, r22
 564:	77 27       	eor	r23, r23
 566:	cb 01       	movw	r24, r22
 568:	97 f9       	bld	r25, 7
 56a:	08 95       	ret

0000056c <__mulsf3>:
 56c:	0b d0       	rcall	.+22     	; 0x584 <__mulsf3x>
 56e:	c4 cf       	rjmp	.-120    	; 0x4f8 <__fp_round>
 570:	b5 df       	rcall	.-150    	; 0x4dc <__fp_pscA>
 572:	28 f0       	brcs	.+10     	; 0x57e <__mulsf3+0x12>
 574:	ba df       	rcall	.-140    	; 0x4ea <__fp_pscB>
 576:	18 f0       	brcs	.+6      	; 0x57e <__mulsf3+0x12>
 578:	95 23       	and	r25, r21
 57a:	09 f0       	breq	.+2      	; 0x57e <__mulsf3+0x12>
 57c:	a6 cf       	rjmp	.-180    	; 0x4ca <__fp_inf>
 57e:	ab cf       	rjmp	.-170    	; 0x4d6 <__fp_nan>
 580:	11 24       	eor	r1, r1
 582:	ee cf       	rjmp	.-36     	; 0x560 <__fp_szero>

00000584 <__mulsf3x>:
 584:	ca df       	rcall	.-108    	; 0x51a <__fp_split3>
 586:	a0 f3       	brcs	.-24     	; 0x570 <__mulsf3+0x4>

00000588 <__mulsf3_pse>:
 588:	95 9f       	mul	r25, r21
 58a:	d1 f3       	breq	.-12     	; 0x580 <__mulsf3+0x14>
 58c:	95 0f       	add	r25, r21
 58e:	50 e0       	ldi	r21, 0x00	; 0
 590:	55 1f       	adc	r21, r21
 592:	62 9f       	mul	r22, r18
 594:	f0 01       	movw	r30, r0
 596:	72 9f       	mul	r23, r18
 598:	bb 27       	eor	r27, r27
 59a:	f0 0d       	add	r31, r0
 59c:	b1 1d       	adc	r27, r1
 59e:	63 9f       	mul	r22, r19
 5a0:	aa 27       	eor	r26, r26
 5a2:	f0 0d       	add	r31, r0
 5a4:	b1 1d       	adc	r27, r1
 5a6:	aa 1f       	adc	r26, r26
 5a8:	64 9f       	mul	r22, r20
 5aa:	66 27       	eor	r22, r22
 5ac:	b0 0d       	add	r27, r0
 5ae:	a1 1d       	adc	r26, r1
 5b0:	66 1f       	adc	r22, r22
 5b2:	82 9f       	mul	r24, r18
 5b4:	22 27       	eor	r18, r18
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	62 1f       	adc	r22, r18
 5bc:	73 9f       	mul	r23, r19
 5be:	b0 0d       	add	r27, r0
 5c0:	a1 1d       	adc	r26, r1
 5c2:	62 1f       	adc	r22, r18
 5c4:	83 9f       	mul	r24, r19
 5c6:	a0 0d       	add	r26, r0
 5c8:	61 1d       	adc	r22, r1
 5ca:	22 1f       	adc	r18, r18
 5cc:	74 9f       	mul	r23, r20
 5ce:	33 27       	eor	r19, r19
 5d0:	a0 0d       	add	r26, r0
 5d2:	61 1d       	adc	r22, r1
 5d4:	23 1f       	adc	r18, r19
 5d6:	84 9f       	mul	r24, r20
 5d8:	60 0d       	add	r22, r0
 5da:	21 1d       	adc	r18, r1
 5dc:	82 2f       	mov	r24, r18
 5de:	76 2f       	mov	r23, r22
 5e0:	6a 2f       	mov	r22, r26
 5e2:	11 24       	eor	r1, r1
 5e4:	9f 57       	subi	r25, 0x7F	; 127
 5e6:	50 40       	sbci	r21, 0x00	; 0
 5e8:	8a f0       	brmi	.+34     	; 0x60c <__mulsf3_pse+0x84>
 5ea:	e1 f0       	breq	.+56     	; 0x624 <__mulsf3_pse+0x9c>
 5ec:	88 23       	and	r24, r24
 5ee:	4a f0       	brmi	.+18     	; 0x602 <__mulsf3_pse+0x7a>
 5f0:	ee 0f       	add	r30, r30
 5f2:	ff 1f       	adc	r31, r31
 5f4:	bb 1f       	adc	r27, r27
 5f6:	66 1f       	adc	r22, r22
 5f8:	77 1f       	adc	r23, r23
 5fa:	88 1f       	adc	r24, r24
 5fc:	91 50       	subi	r25, 0x01	; 1
 5fe:	50 40       	sbci	r21, 0x00	; 0
 600:	a9 f7       	brne	.-22     	; 0x5ec <__mulsf3_pse+0x64>
 602:	9e 3f       	cpi	r25, 0xFE	; 254
 604:	51 05       	cpc	r21, r1
 606:	70 f0       	brcs	.+28     	; 0x624 <__mulsf3_pse+0x9c>
 608:	60 cf       	rjmp	.-320    	; 0x4ca <__fp_inf>
 60a:	aa cf       	rjmp	.-172    	; 0x560 <__fp_szero>
 60c:	5f 3f       	cpi	r21, 0xFF	; 255
 60e:	ec f3       	brlt	.-6      	; 0x60a <__mulsf3_pse+0x82>
 610:	98 3e       	cpi	r25, 0xE8	; 232
 612:	dc f3       	brlt	.-10     	; 0x60a <__mulsf3_pse+0x82>
 614:	86 95       	lsr	r24
 616:	77 95       	ror	r23
 618:	67 95       	ror	r22
 61a:	b7 95       	ror	r27
 61c:	f7 95       	ror	r31
 61e:	e7 95       	ror	r30
 620:	9f 5f       	subi	r25, 0xFF	; 255
 622:	c1 f7       	brne	.-16     	; 0x614 <__mulsf3_pse+0x8c>
 624:	fe 2b       	or	r31, r30
 626:	88 0f       	add	r24, r24
 628:	91 1d       	adc	r25, r1
 62a:	96 95       	lsr	r25
 62c:	87 95       	ror	r24
 62e:	97 f9       	bld	r25, 7
 630:	08 95       	ret

00000632 <_exit>:
 632:	f8 94       	cli

00000634 <__stop_program>:
 634:	ff cf       	rjmp	.-2      	; 0x634 <__stop_program>
